[{"/home/mikovalnya/sonya/fullstack_project/my-app/src/index.js":"1","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/App.js":"2","/home/mikovalnya/sonya/fullstack_project/my-app/src/context.js":"3","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/NotFound.js":"4","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Login.js":"5","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SignUp.js":"6","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Title.js":"7","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Home/Home.js":"8","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/CreateNewSet.js":"9","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Profile/Profile.js":"10","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/LearnSet.js":"11","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SetInfo/SetInfo.js":"12","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/WordSet.js":"13","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/AddSetName.js":"14","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/AddSetDescription.js":"15","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Home/AddBlock.js":"16","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/FlashCard.js":"17","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Profile/SetRepresenting.js":"18","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SetInfo/SetStatistic.js":"19","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/Word.js":"20","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SetInfo/RadialChart.js":"21"},{"size":260,"mtime":1641895596279,"results":"22","hashOfConfig":"23"},{"size":4429,"mtime":1641915413319,"results":"24","hashOfConfig":"23"},{"size":72,"mtime":1641895596275,"results":"25","hashOfConfig":"23"},{"size":311,"mtime":1641895596275,"results":"26","hashOfConfig":"23"},{"size":873,"mtime":1641895596275,"results":"27","hashOfConfig":"23"},{"size":1020,"mtime":1641895596275,"results":"28","hashOfConfig":"23"},{"size":768,"mtime":1641929541739,"results":"29","hashOfConfig":"23"},{"size":627,"mtime":1641895596275,"results":"30","hashOfConfig":"23"},{"size":2490,"mtime":1641914012249,"results":"31","hashOfConfig":"23"},{"size":1318,"mtime":1641917196200,"results":"32","hashOfConfig":"23"},{"size":1342,"mtime":1641926407745,"results":"33","hashOfConfig":"23"},{"size":1464,"mtime":1641896279595,"results":"34","hashOfConfig":"23"},{"size":311,"mtime":1641913820008,"results":"35","hashOfConfig":"23"},{"size":476,"mtime":1641909834034,"results":"36","hashOfConfig":"23"},{"size":454,"mtime":1641912368532,"results":"37","hashOfConfig":"23"},{"size":660,"mtime":1641895596275,"results":"38","hashOfConfig":"23"},{"size":2074,"mtime":1641930724382,"results":"39","hashOfConfig":"23"},{"size":371,"mtime":1641918326188,"results":"40","hashOfConfig":"23"},{"size":1372,"mtime":1641896279599,"results":"41","hashOfConfig":"23"},{"size":389,"mtime":1641895596275,"results":"42","hashOfConfig":"23"},{"size":2302,"mtime":1641895596275,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lb8mq8",{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mikovalnya/sonya/fullstack_project/my-app/src/index.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/App.js",["94","95","96","97","98"],"import React, {useState} from 'react';\nimport {Fragment} from 'react';\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom'\n\nimport Home from './Home/Home'\nimport LogIn from './Login'\nimport SignUp from './SignUp'\nimport NotFound from './NotFound';\nimport CreateNewSet from './CreateNewSet/CreateNewSet';\nimport LearnSet from './LearnSet/LearnSet';\nimport SetInfo from './SetInfo/SetInfo';\nimport Profile from './Profile/Profile'\nimport Title from './Title';\n\nimport {Context} from '../context'\n\n\nfunction App() {\n    document.body.style.backgroundColor = 'white';\n\n    ///////////////////////////////////////////////////////////////////////////////////\n    // DATA\n    //////////////////////////////////////////////////////////////////////////////////\n    let wordSet1 = {\n        id: 0,\n        words: [\n            {\n                id: 0,\n                part1: 'cat',\n                part2: 'кошка',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'dog',\n                part2: ' собака',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'Domestic Animals', \n        description: 'Names of some most popular animals.'\n    };\n    let wordSet2 = {\n        id: 1,\n        words: [\n            {\n                id: 1,\n                part1: 'Take into consideration',\n                part2: 'принимать к сведению',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'Once in a blue moon',\n                part2: 'Очень редко, почти никогда',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 3,\n                part1: 'Have butterflies in your stomach',\n                part2: 'Быть очень взволнованным, нервным',\n                isLearnt: false,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 4,\n                part1: 'See eye to eye',\n                part2: 'Иметь такую же точку зрения',\n                isLearnt: false,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'English Ideoms', \n        description: 'Some most popular English ideoms.'\n    };\n    let wordSet3 = {\n        id: 2,\n        words: [\n            {\n                id: 1,\n                part1: 'mother',\n                part2: 'мама',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'father',\n                part2: 'папа',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'Family members', \n        description: 'Names of family members.'\n    };\n    // const [state, setState] = useState(wordSet1);//[wordSet1, wordSet2, wordSet3]);\n    ///////////////////////////////////////////////////////////////////////////////////\n    // DATA\n    //////////////////////////////////////////////////////////////////////////////////\n      \n    return (\n        // <Context.Provider value={[wordSet1]}>\n        <div>\n            <Router>\n                <Title />\n                <Fragment>\n                    <Routes>\n                        <Route exact path=\"/\" element={<Home />}/>\n                        <Route exact path=\"/login\" element={<LogIn />} />\n                        <Route exact path=\"/signup\" element={<SignUp />} />\n                        <Route exact path=\"/create-new-set\" element={<CreateNewSet />} />\n                        <Route exact path=\"/learn-set/:setId\" element={<LearnSet/>} />\n                        <Route exact path=\"/set-info\" element={<SetInfo />} />\n                        <Route exact path=\"/profile\" element={<Profile />} />\n                        <Route exact path=\"/home\" element={<Home />} />\n                        <Route path = '*' element={<NotFound />}/>\n                    </Routes>\n                </Fragment>\n            </Router>\n        </div>\n        // </Context.Provider>\n    )\n}\n\nexport default App;  ","/home/mikovalnya/sonya/fullstack_project/my-app/src/context.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/NotFound.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Login.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SignUp.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Title.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Home/Home.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/CreateNewSet.js",["99","100"],"import React, {useState, useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport WordSet from './WordSet.js'\nimport { Context } from '../../context';\n\n\nfunction CreateNewSet({state}) {\n    const navigate = useNavigate();\n    const baseURL = \"http://127.0.0.1:8000/api/\";\n    const [wordSet, ChangeWordSet] = useState({\n        'words': []\n    });\n    const [setName, UpdateSetName] = useState('');\n    const [description, UpdateDescription] = useState('');  \n    const [part1, Updatepart1] = useState('');\n    const [part2, Updatepart2] = useState('');\n    const CreateSet = () => {\n        fetch(baseURL + 'set/create/', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'Application/json',\n            },\n            body: JSON.stringify({\n                'name': setName,\n                'words': wordSet.words,\n                'description': description\n            })\n        }).then((response) => {\n            navigate(\"/profile\");\n        })\n    }\n\n    return (\n        <div>\n            <h2>Create new set:</h2>\n            <AddSetName Update = {UpdateSetName}/>\n            <AddSetDescription Update = {UpdateDescription}/>\n            <h2>Add new words to your set!</h2>\n\n            <div className='add_word'>\n                <input placeholder='type a word' name='part1' onChange={\n                    e => Updatepart1(e.target.value)\n                }/>\n                <input placeholder='type translation' name='part2' onChange = {\n                    e => Updatepart2(e.target.value)\n                }/>\n                <button className='button' onClick = {\n                    (e) => {\n                        e.preventDefault()\n                        const item = {'part1': part1, 'part2': part2}\n                        ChangeWordSet({\n                            'words': [...wordSet.words, item]\n                          })\n                    }\n                }>add</button>\n            </div>\n\n            <h2>Your set contains:</h2>\n            <WordSet words={wordSet.words} />\n\n            <div className='create_set_btn'>\n                <button className='button' onClick = { (e) =>{\n                    e.preventDefault()\n                    CreateSet()\n                }}>create set</button>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateNewSet;\n\n","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Profile/Profile.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/LearnSet.js",["101","102"],"import React, {useState, useEffect} from 'react';\nimport '../../style/LearnSet.css';\nimport FlashCard from './FlashCard'\nimport { useParams } from 'react-router-dom';\nimport {Context} from '../../context'\nimport axios from 'axios';\n\n\nfunction LearnSet() {\n    const params = useParams();\n    const baseURL = \"http://127.0.0.1:8000/api/\";\n    const [set, GetSet] = useState({\n        name: 'reload(wait)',\n        words: [\n            {   'part1': 'parrot',\n                'part2': 'попугайчик',\n                'id': 0,\n                'isLearnt': false, \n            }\n        ]\n    });\n    let {setId} = params;\n    const [state, setState] = useState({\n        text1: set.words[0].part1,\n        text2: set.words[0].part2,\n        wordId: 0,\n        wordSet: set\n    });\n    useEffect( () => {\n        axios({\n            method: \"GET\",\n            url: baseURL + 'set/get/' + setId, \n        }).then(response => response.data).then((data =>{\n            GetSet(data)\n            setState({        \n                text1: data.words[0].part1,\n                text2: data.words[0].part2,\n                wordId: 0,\n                wordSet: data})\n        }))}, []);\n    return (\n        <div>\n            <FlashCard set={set} setId={setId} state = {state} setState = {setState}/>\n        </div>\n    )\n}\n\nexport default LearnSet;\n\n","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SetInfo/SetInfo.js",["103"],"import React, {useState} from 'react';\n\nimport SetStatistic from './SetStatistic'\n\nimport WordSet from '../CreateNewSet/WordSet';\n\nimport '../../style/SetInfo.css';\n\nimport { Link } from 'react-router-dom';\n\n\n\nfunction SetInfo() {\n\n    let wordSet = {\n        words: [\n            {\n                id: 1,\n                part1: 'cat',\n                part2: 'кошка',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'dog',\n                part2: ' собака',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'Domestic Animals', \n        description: 'Names of some most popular animals.'\n    };\n    \n    return (\n        <div>\n            <h2>Information of the set:</h2>\n            <h2 className='information-title'>name: {wordSet.name}</h2>\n            <h2 className='information-content'>description: {wordSet.description}</h2>\n            <SetStatistic />\n            <h2>Your set contains:</h2>\n            <WordSet words={wordSet.words} />\n            \n            <div className='learn_set_btn'>\n            <Link to=\"/learn-set\"><button className='button' >learn set</button></Link>\n                <p className='note_for_learn_set_btn'>click to start learning this set </p>\n            </div>\n            \n        </div>  \n    )\n}\n\nexport default SetInfo;\n\n","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/WordSet.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/AddSetName.js",["104","105"],"import React, { useContext } from 'react';\nimport { Context } from '../../context';\nimport '../../style/CreateNewSet.css';\n\nfunction AddSetName(props) {\n    const Update = props.Update;\n    return (\n        <div>\n            <div className='add_set_name'> \n                <input placeholder='set name' name='name' onChange = {\n                        e => Update(e.target.value)\n                    }/>\n            </div>\n        </div>\n    )\n }\n \n export default AddSetName;","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/AddSetDescription.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Home/AddBlock.js",["106"],"import React from 'react';\nimport '../../style/Home.css';\nimport logo from '../../img/boy.jpg';\n\nfunction AddBlock({text}, {picture}) {\n    \n    return (\n        <div>\n            <div className='add-text'>\n                \n                    <p>Early morning? All-nighter? With science-backed revision methods \n                that improve active recall, <div className='FlashCartLearner'>FlashCardsLearner</div> is designed to save you time!</p>\n\n                    <p>Easily create your own sets.\n                    Revise at home, school or on the go with our app!</p>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default AddBlock;","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/FlashCard.js",["107","108","109","110"],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Profile/SetRepresenting.js",[],"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SetInfo/SetStatistic.js",["111"],"import React, {useState} from 'react';\nimport '../../style/SetInfo.css';\nimport RadialChart from './RadialChart'\n\nfunction SetStatistic() {\n\n    let wordSet = {\n        words: [\n            {\n                id: 1,\n                part1: 'cat',\n                part2: 'koshka',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'dog',\n                part2: 'cobaka',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'Domestic Animals', \n        description: 'Names of some most popular animals.'\n    };\n    \n    let notLearnt = 0;\n    let learnt = 0;\n    for (var i = 0; i < wordSet.words.length; ++i) {\n        let elem = wordSet.words[i];\n        if (elem.isLearnt === false) {notLearnt = notLearnt + 1;}\n        else {learnt = learnt + 1;}\n    }\n    let persantage = 100 * learnt / (notLearnt + learnt);\n\n    console.log(persantage);\n    return (\n       <div>\n           <h2>Progress:</h2>\n           <div className='circle-position'>\n                <RadialChart progress={persantage} color=\"#3c71d0\"/>\n                <h3 className='progress-message'>You have lernt {persantage}% of the set!</h3>\n           </div>\n           \n       </div>\n    )\n}\n\nexport default SetStatistic;\n\n","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/Word.js",["112"],"import React from 'react';\nimport '../../style/CreateNewSet.css';\n\nfunction Word({word}) {\n    let {id, part1, part2} = word;\n\n    return (\n        <div className='word_parts'>\n            <div className='word_part1'>\n                {part1}\n            </div>\n            <div className='word_part2'>\n                {part2}\n            </div>\n        </div>\n    )\n}\n\nexport default Word;","/home/mikovalnya/sonya/fullstack_project/my-app/src/components/SetInfo/RadialChart.js",[],{"ruleId":"113","severity":1,"message":"114","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"117","line":15,"column":9,"nodeType":"115","messageId":"116","endLine":15,"endColumn":16},{"ruleId":"113","severity":1,"message":"118","line":24,"column":9,"nodeType":"115","messageId":"116","endLine":24,"endColumn":17},{"ruleId":"113","severity":1,"message":"119","line":45,"column":9,"nodeType":"115","messageId":"116","endLine":45,"endColumn":17},{"ruleId":"113","severity":1,"message":"120","line":80,"column":9,"nodeType":"115","messageId":"116","endLine":80,"endColumn":17},{"ruleId":"113","severity":1,"message":"121","line":1,"column":26,"nodeType":"115","messageId":"116","endLine":1,"endColumn":35},{"ruleId":"113","severity":1,"message":"117","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":5,"column":9,"nodeType":"115","messageId":"116","endLine":5,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":40,"column":15,"nodeType":"124","endLine":40,"endColumn":17,"suggestions":"125"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"126","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":27},{"ruleId":"113","severity":1,"message":"117","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":17},{"ruleId":"113","severity":1,"message":"127","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":12},{"ruleId":"113","severity":1,"message":"117","line":4,"column":9,"nodeType":"115","messageId":"116","endLine":4,"endColumn":16},{"ruleId":"122","severity":1,"message":"128","line":24,"column":8,"nodeType":"124","endLine":24,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":28,"column":39,"nodeType":"132","messageId":"133","endLine":28,"endColumn":41},{"ruleId":"130","severity":1,"message":"131","line":30,"column":16,"nodeType":"132","messageId":"133","endLine":30,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"134","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":12},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Context' is defined but never used.","'wordSet1' is assigned a value but never used.","'wordSet2' is assigned a value but never used.","'wordSet3' is assigned a value but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setId'. Either include it or remove the dependency array.","ArrayExpression",["135"],"'useContext' is defined but never used.","'logo' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'redirect'. Either include them or remove the dependency array.",["136"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [setId]",{"range":"141","text":"142"},"Update the dependencies array to be: [navigate, redirect]",{"range":"143","text":"144"},[1163,1165],"[setId]",[689,691],"[navigate, redirect]"]