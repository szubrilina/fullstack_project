{"ast":null,"code":"var _jsxFileName = \"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/LearnSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../../style/LearnSet.css';\nimport FlashCard from './FlashCard';\nimport { useParams } from 'react-router-dom';\nimport { Context } from '../../context';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LearnSet() {\n  _s();\n\n  const params = useParams();\n  const baseURL = \"http://127.0.0.1:8000/api/\";\n  const [set, GetSet] = useState({\n    name: 'reload(wait)',\n    words: [{\n      'part1': 'cat',\n      'part2': 'кошечка',\n      'id': 0,\n      'isLearnt': false\n    }]\n  });\n  let {\n    setId\n  } = params;\n  console.log(setId);\n  console.log(baseURL + 'set/get/' + setId);\n  fetch(baseURL + 'set/get/' + setId, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(data => {\n    GetSet(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FlashCard, {\n      set: set,\n      setId: setId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LearnSet, \"6+xdROOCp6lJRKS/8Amx/85ydPI=\", false, function () {\n  return [useParams];\n});\n\n_c = LearnSet;\nexport default LearnSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"LearnSet\");","map":{"version":3,"sources":["/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/LearnSet.js"],"names":["React","useState","useEffect","FlashCard","useParams","Context","axios","LearnSet","params","baseURL","set","GetSet","name","words","setId","console","log","fetch","method","headers","then","response","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,0BAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,OAAO,GAAG,4BAAhB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC;AAC3BW,IAAAA,IAAI,EAAE,cADqB;AAE3BC,IAAAA,KAAK,EAAE,CACH;AAAI,eAAS,KAAb;AACI,eAAS,SADb;AAEI,YAAM,CAFV;AAGI,kBAAY;AAHhB,KADG;AAFoB,GAAD,CAA9B;AAUA,MAAI;AAACC,IAAAA;AAAD,MAAUN,MAAd;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,GAAG,UAAV,GAAuBK,KAAnC;AAEAG,EAAAA,KAAK,CAACR,OAAO,GAAG,UAAV,GAAuBK,KAAxB,EAA+B;AAChCI,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFuB,GAA/B,CAAL,CAKGC,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAKuCF,IALvC,CAK6CG,IAAI,IAAI;AACjDZ,IAAAA,MAAM,CAACY,IAAD,CAAN;AACH,GAPD;AAQA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,GAAG,EAAEb,GAAhB;AAAqB,MAAA,KAAK,EAAEI;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA9BQP,Q;UACUH,S;;;KADVG,Q;AAgCT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../../style/LearnSet.css';\nimport FlashCard from './FlashCard'\nimport { useParams } from 'react-router-dom';\nimport {Context} from '../../context'\nimport axios from 'axios';\n\n\nfunction LearnSet() {\n    const params = useParams();\n    const baseURL = \"http://127.0.0.1:8000/api/\";\n    const [set, GetSet] = useState({\n        name: 'reload(wait)',\n        words: [\n            {   'part1': 'cat',\n                'part2': 'кошечка',\n                'id': 0,\n                'isLearnt': false, \n            }\n        ]\n    });\n    let {setId} = params;\n    console.log(setId)\n    console.log(baseURL + 'set/get/' + setId)\n    \n    fetch(baseURL + 'set/get/' + setId, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n    }).then((response) => response.json()).then((data => {\n        GetSet(data)\n    }));\n    return (\n        <div>\n            <FlashCard set={set} setId={setId} />\n        </div>\n    )\n}\n\nexport default LearnSet;\n\n"]},"metadata":{},"sourceType":"module"}