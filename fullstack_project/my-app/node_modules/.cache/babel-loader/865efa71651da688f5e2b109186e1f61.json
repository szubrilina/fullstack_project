{"ast":null,"code":"var _jsxFileName = \"/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet/CreateNewSet.js\";\nimport React, { useState } from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Word {\n  constructor(part1, part2) {\n    this.id = Date.now();\n    this.part1 = part1;\n    this.part2 = part2;\n    this.isLearnt = false;\n    this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n  }\n\n}\n\nclass WordSet {\n  constructor(wordArray) {\n    this.words = wordArray;\n  }\n\n  deleteWord(id) {\n    this.words.filter(elem => elem.id !== id);\n  }\n\n  addWord(word) {\n    this.words.push(word);\n  }\n\n} // data initialization\n//  let wordSet = new WordSet([\n//     new Word('cat', 'koshka'), \n//     new Word('dog', 'cobaka'), \n// ]);\n// const [state, setState] = useState(wordSet);\n// const addItem = (part1, part2) => {\n//     setState(() => {\n//         state.addItem(part1, part2);\n//         return state\n//     })\n// }; \n// const deleteItem = (id) => {\n//     setState(() => {\n//         state.deleteItem(id);\n//         return state;\n//     });\n// }; \n// data initialization\n\n\nfunction CreateNewSet() {\n  // this.button2Click = () => {\n  //     let text = this.input2.value;\n  //     if(text && text.length > 0) {\n  //         alert(`Btn2: ${text}`);\n  //     } \n  //     else {\n  //         alert(`Btn2: empty`);\n  //     }\n  // }\n  // const onClick =  event => {\n  //     // let val = event.previousElementSibling.value;\n  //     let val = this.ref.wordPart1.value;\n  //     if(val == ''){\n  //         console.log('no input');\n  //     }else{\n  //        console.log(val);\n  //     }\n  //   }\n  // onClick($this) {\n  //     var val = $this.previousElementSibling.value;\n  //     if(val == ''){\n  //         console.log('no input');\n  //     }else{\n  //        console.log(val);\n  //     }\n  // }\n  // render() {\n  return (\n    /*#__PURE__*/\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddSetName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddSetDescription, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add new words to your set!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add_word\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: \"wordPart1\",\n          className: \"add_word_1\",\n          placeholder: \"type a word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"add_word_2\",\n          placeholder: \"type translation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: onClick,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  );\n}\n\n_c = CreateNewSet;\nexport default CreateNewSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewSet\");","map":{"version":3,"sources":["/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet/CreateNewSet.js"],"names":["React","useState","AddSetDescription","AddSetName","Word","constructor","part1","part2","id","Date","now","isLearnt","lastSeen","WordSet","wordArray","words","deleteWord","filter","elem","addWord","word","push","CreateNewSet","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,8BAAP;;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AACtB,SAAKC,EAAL,GAAUC,IAAI,CAACC,GAAL,EAAV;AACA,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKI,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,YAAhB,CALsB,CAKQ;AACjC;;AAPM;;AASX,MAAMC,OAAN,CAAc;AACVR,EAAAA,WAAW,CAACS,SAAD,EAAY;AACnB,SAAKC,KAAL,GAAaD,SAAb;AACH;;AAEDE,EAAAA,UAAU,CAACR,EAAD,EAAK;AACX,SAAKO,KAAL,CAAWE,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYA,EAAtC;AACH;;AAEDW,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,SAAKL,KAAL,CAAWM,IAAX,CAAgBD,IAAhB;AACH;;AAXS,C,CAcb;AACD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASE,YAAT,GAAwB;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACI;AAAA;AAGE;AACE;AAAA,8BAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAO,UAAA,GAAG,EAAC,WAAX;AAAuB,UAAA,SAAS,EAAC,YAAjC;AAA8C,UAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,SAAS,EAAC,YAAjB;AAA8B,UAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAmBP;;KAlDQD,Y;AAoDT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\n\nclass Word {\n    constructor(part1, part2) {\n        this.id = Date.now();\n        this.part1 = part1;\n        this.part2 = part2;\n        this.isLearnt = false;\n        this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n    }\n}\nclass WordSet {\n    constructor(wordArray) {\n        this.words = wordArray;\n    }\n\n    deleteWord(id) {\n        this.words.filter(elem => elem.id !== id)\n    }\n\n    addWord(word) {\n        this.words.push(word);\n    }\n}\n\n // data initialization\n//  let wordSet = new WordSet([\n//     new Word('cat', 'koshka'), \n//     new Word('dog', 'cobaka'), \n// ]);\n\n// const [state, setState] = useState(wordSet);\n// const addItem = (part1, part2) => {\n//     setState(() => {\n//         state.addItem(part1, part2);\n//         return state\n//     })\n// }; \n\n// const deleteItem = (id) => {\n//     setState(() => {\n//         state.deleteItem(id);\n//         return state;\n//     });\n// }; \n// data initialization\n\nfunction CreateNewSet() {\n    \n    // this.button2Click = () => {\n    //     let text = this.input2.value;\n    //     if(text && text.length > 0) {\n    //         alert(`Btn2: ${text}`);\n    //     } \n    //     else {\n    //         alert(`Btn2: empty`);\n    //     }\n    // }\n    // const onClick =  event => {\n    //     // let val = event.previousElementSibling.value;\n    //     let val = this.ref.wordPart1.value;\n    //     if(val == ''){\n    //         console.log('no input');\n    //     }else{\n    //        console.log(val);\n    //     }\n    //   }\n\n    // onClick($this) {\n    //     var val = $this.previousElementSibling.value;\n    //     if(val == ''){\n    //         console.log('no input');\n    //     }else{\n    //        console.log(val);\n    //     }\n    // }\n\n    // render() {\n        return (\n            \n            \n          // </div>\n            <div>\n                {/* <h1>CreateNewSet page!</h1> */}\n                <AddSetName />\n                <AddSetDescription />\n                <h2>Add new words to your set!</h2>\n\n                <div className='add_word'>\n                    <input ref=\"wordPart1\" className='add_word_1' placeholder='type a word' />\n                    <input className='add_word_2' placeholder='type translation' />\n                    <button className='button' onClick={onClick}>add</button>\n                </div>\n            </div>\n\n          \n        )\n}\n\nexport default CreateNewSet;\n\n"]},"metadata":{},"sourceType":"module"}