{"ast":null,"code":"var _jsxFileName = \"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/CreateNewSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport WordSet from './WordSet.js';\nimport { Context } from '../../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateNewSet(_ref) {\n  _s();\n\n  let {\n    state\n  } = _ref;\n  const history = useHistory();\n  const baseURL = \"http://127.0.0.1:8000/api/\";\n  const [wordSet, ChangeWordSet] = useState({\n    'words': []\n  });\n  const [setName, UpdateSetName] = useState('');\n  const [description, UpdateDescription] = useState('');\n  const [part1, Updatepart1] = useState('');\n  const [part2, Updatepart2] = useState('');\n\n  const CreateSet = () => {\n    fetch(baseURL + 'set/create/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'Application/json'\n      },\n      body: JSON.stringify({\n        'name': setName,\n        'words': wordSet.words,\n        'description': description\n      })\n    }).then(response => {\n      history.push(\"/profile\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create new set:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddSetName, {\n      Update: UpdateSetName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddSetDescription, {\n      Update: UpdateDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new words to your set!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_word\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"type a word\",\n        name: \"part1\",\n        onChange: e => Updatepart1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"type translation\",\n        name: \"part2\",\n        onChange: e => Updatepart2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: e => {\n          e.preventDefault();\n          const item = {\n            'part1': part1,\n            'part2': part2\n          };\n          ChangeWordSet({\n            'words': [...wordSet.words, item]\n          });\n        },\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your set contains:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordSet, {\n      words: wordSet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_set_btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: e => {\n          e.preventDefault();\n          CreateSet();\n        },\n        children: \"create set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateNewSet, \"pJQwvUSWhbzY1mreovptDPBRMek=\", true);\n\n_c = CreateNewSet;\nexport default CreateNewSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewSet\");","map":{"version":3,"sources":["/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/CreateNewSet.js"],"names":["React","useState","useContext","AddSetDescription","AddSetName","WordSet","Context","CreateNewSet","state","history","useHistory","baseURL","wordSet","ChangeWordSet","setName","UpdateSetName","description","UpdateDescription","part1","Updatepart1","part2","Updatepart2","CreateSet","fetch","method","headers","body","JSON","stringify","words","then","response","push","e","target","value","preventDefault","item"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport WordSet from './WordSet.js'\nimport { Context } from '../../context';\n\n\nfunction CreateNewSet({state}) {\n    const history = useHistory();\n    const baseURL = \"http://127.0.0.1:8000/api/\";\n    const [wordSet, ChangeWordSet] = useState({\n        'words': []\n    });\n    const [setName, UpdateSetName] = useState('');\n    const [description, UpdateDescription] = useState('');  \n    const [part1, Updatepart1] = useState('');\n    const [part2, Updatepart2] = useState('');\n    const CreateSet = () => {\n        fetch(baseURL + 'set/create/', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'Application/json',\n            },\n            body: JSON.stringify({\n                'name': setName,\n                'words': wordSet.words,\n                'description': description\n            })\n        }).then((response) => {\n            history.push(\"/profile\");\n        })\n    }\n\n    return (\n        <div>\n            <h2>Create new set:</h2>\n            <AddSetName Update = {UpdateSetName}/>\n            <AddSetDescription Update = {UpdateDescription}/>\n            <h2>Add new words to your set!</h2>\n\n            <div className='add_word'>\n                <input placeholder='type a word' name='part1' onChange={\n                    e => Updatepart1(e.target.value)\n                }/>\n                <input placeholder='type translation' name='part2' onChange = {\n                    e => Updatepart2(e.target.value)\n                }/>\n                <button className='button' onClick = {\n                    (e) => {\n                        e.preventDefault()\n                        const item = {'part1': part1, 'part2': part2}\n                        ChangeWordSet({\n                            'words': [...wordSet.words, item]\n                          })\n                    }\n                }>add</button>\n            </div>\n\n            <h2>Your set contains:</h2>\n            <WordSet words={wordSet} />\n\n            <div className='create_set_btn'>\n                <button className='button' onClick = { (e) =>{\n                    e.preventDefault()\n                    CreateSet()\n                }}>create set</button>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateNewSet;\n\n"]},"metadata":{},"sourceType":"module"}