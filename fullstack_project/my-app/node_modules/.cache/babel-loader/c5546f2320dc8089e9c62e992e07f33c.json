{"ast":null,"code":"var _jsxFileName = \"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/CreateNewSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport WordSet from './WordSet.js';\nimport { Context } from '../../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateNewSet(_ref) {\n  _s();\n\n  let {\n    state\n  } = _ref;\n  const baseURL = \"http://127.0.0.1:8000/api/\";\n  const [newWordSet, UpdateWordSet] = useState([]);\n  const [setName, UpdateSetName] = useState([]);\n\n  const CreateSet = () => {\n    console.log('here');\n    console.log('setName: ', setName);\n    console.log('newWordSet: ', setName);\n    fetch(baseURL + 'set/create/', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'Application/json'\n      },\n      body: JSON.stringify({\n        'name': setName,\n        'words': newWordSet\n      })\n    });\n  };\n\n  let wordSet = [{\n    id: 1,\n    part1: 'cat',\n    part2: 'кошка'\n  }, {\n    id: 2,\n    part1: 'dog',\n    part2: 'собака'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create new set:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddSetName, {\n      Update: UpdateSetName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddSetDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new words to your set!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_word\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"type a word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"type translation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your set contains:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordSet, {\n      words: wordSet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_set_btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: e => {\n          e.preventDefault();\n          CreateSet();\n        },\n        children: \"create set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateNewSet, \"gBhNMzOaEYmcDNeWQYTsFM5gf+4=\");\n\n_c = CreateNewSet;\nexport default CreateNewSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewSet\");","map":{"version":3,"sources":["/home/mikovalnya/sonya/fullstack_project/my-app/src/components/CreateNewSet/CreateNewSet.js"],"names":["React","useState","useContext","AddSetDescription","AddSetName","WordSet","Context","CreateNewSet","state","baseURL","newWordSet","UpdateWordSet","setName","UpdateSetName","CreateSet","console","log","fetch","method","headers","body","JSON","stringify","wordSet","id","part1","part2","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,8BAAP;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,eAAxB;;;AAGA,SAASC,YAAT,OAA+B;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAC3B,QAAMC,OAAO,GAAG,4BAAhB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,OAAD,EAAUC,aAAV,IAA2BZ,QAAQ,CAAC,EAAD,CAAzC;;AACA,QAAMa,SAAS,GAAG,MAAM;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,OAA5B;AACAK,IAAAA,KAAK,CAACR,OAAO,GAAG,aAAX,EAA0B;AAC3BS,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFkB;AAK3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,gBAAQV,OADS;AAEjB,iBAASF;AAFQ,OAAf;AALqB,KAA1B,CAAL;AAWH,GAfD;;AAgBA,MAAIa,OAAO,GAAG,CACV;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,KAFX;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADU,EAMV;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,KAFX;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANU,CAAd;AAaA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAIb;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEU;AAAhB;AAAA;AAAA;AAAA;AAAA,YAbJ,eAeI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAMI,CAAD,IAAM;AACzCA,UAAAA,CAAC,CAACC,cAAF;AACAd,UAAAA,SAAS;AACZ,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAzDQP,Y;;KAAAA,Y;AA2DT,eAAeA,YAAf","sourcesContent":["import React, {useState, useContext} from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport WordSet from './WordSet.js'\nimport { Context } from '../../context';\n\n\nfunction CreateNewSet({state}) {\n    const baseURL = \"http://127.0.0.1:8000/api/\";\n    const [newWordSet, UpdateWordSet] = useState([]);\n    const [setName, UpdateSetName] = useState([]); \n    const CreateSet = () => {\n        console.log('here')\n        console.log('setName: ', setName);\n        console.log('newWordSet: ', setName);\n        fetch(baseURL + 'set/create/', {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'Application/json',\n            },\n            body: JSON.stringify({\n                'name': setName,\n                'words': newWordSet,\n                \n            })\n        })\n    }\n    let wordSet = [\n        {\n            id: 1,\n            part1: 'cat',\n            part2: 'кошка'\n        },\n        {\n            id: 2,\n            part1: 'dog',\n            part2: 'собака'\n        }\n    ]\n\n    return (\n        <div>\n            <h2>Create new set:</h2>\n            <AddSetName Update = {UpdateSetName}/>\n            <AddSetDescription />\n            <h2>Add new words to your set!</h2>\n\n            <div className='add_word'>\n                <input placeholder='type a word' />\n                <input placeholder='type translation' />\n                <button className='button' >add</button>\n            </div>\n\n            <h2>Your set contains:</h2>\n            <WordSet words={wordSet} />\n\n            <div className='create_set_btn'>\n                <button className='button' onClick = { (e) =>{\n                    e.preventDefault()\n                    CreateSet()\n                }}>create set</button>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateNewSet;\n\n"]},"metadata":{},"sourceType":"module"}