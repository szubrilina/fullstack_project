{"ast":null,"code":"var _jsxFileName = \"/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet/CreateNewSet.js\";\nimport React, { useState } from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport WordSet from './WordSet.js'; // class Word {\n//     constructor(part1, part2) {\n//         this.id = Date.now();\n//         this.part1 = part1;\n//         this.part2 = part2;\n//         this.isLearnt = false;\n//         this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n//     }\n// }\n// class WordSet {\n//     constructor(wordArray) {\n//         this.words = wordArray;\n//     }\n//     deleteWord(id) {\n//         this.words.filter(elem => elem.id !== id)\n//     }\n//     addWord(word) {\n//         this.words.push(word);\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateNewSet() {\n  //  data initialization\n  // let wordSet = new WordSet([\n  //     new Word('cat', 'koshka'), \n  //     new Word('dog', 'cobaka'), \n  // ]);\n  let wordSet = [{\n    id: 1,\n    part1: 'cat',\n    part2: 'koshka'\n  }, {\n    id: 2,\n    part1: 'bog',\n    part2: 'cobaka'\n  }]; // const [state, setState] = useState(wordSet);\n  // const addItem = (part1, part2) => {\n  //     setState(() => {\n  //         state.addItem(part1, part2);\n  //         return state\n  //     })\n  // }; \n  // const deleteItem = (id) => {\n  //     setState(() => {\n  //         state.deleteItem(id);\n  //         return state;\n  //     });\n  // }; \n  // data initialization\n  // console.log(wordSet);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddSetName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddSetDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new words to your set!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_word\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add_word_1\",\n        placeholder: \"type a word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add_word_2\",\n        placeholder: \"type translation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your set contains:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WordSet, {\n      words: wordSet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CreateNewSet;\nexport default CreateNewSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewSet\");","map":{"version":3,"sources":["/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet/CreateNewSet.js"],"names":["React","useState","AddSetDescription","AddSetName","WordSet","CreateNewSet","wordSet","id","part1","part2"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,8BAAP;AACA,OAAOC,OAAP,MAAoB,cAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;AAIA,SAASC,YAAT,GAAwB;AAEpB;AACA;AACA;AACA;AACA;AAEA,MAAIC,OAAO,GAAG,CACV;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,KAFX;AAGIC,IAAAA,KAAK,EAAE;AAHX,GADU,EAMV;AACIF,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,KAFX;AAGIC,IAAAA,KAAK,EAAE;AAHX,GANU,CAAd,CARoB,CAqBpB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACI;AAAA,4BAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;KAvDQD,Y;AAyDT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport WordSet from './WordSet.js'\n\n// class Word {\n//     constructor(part1, part2) {\n//         this.id = Date.now();\n//         this.part1 = part1;\n//         this.part2 = part2;\n//         this.isLearnt = false;\n//         this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n//     }\n// }\n// class WordSet {\n//     constructor(wordArray) {\n//         this.words = wordArray;\n//     }\n\n//     deleteWord(id) {\n//         this.words.filter(elem => elem.id !== id)\n//     }\n\n//     addWord(word) {\n//         this.words.push(word);\n//     }\n// }\n\n\n\nfunction CreateNewSet() {\n\n    //  data initialization\n    // let wordSet = new WordSet([\n    //     new Word('cat', 'koshka'), \n    //     new Word('dog', 'cobaka'), \n    // ]);\n\n    let wordSet = [\n        {\n            id: 1,\n            part1: 'cat',\n            part2: 'koshka'\n        },\n        {\n            id: 2,\n            part1: 'bog',\n            part2: 'cobaka'\n        }\n    ]\n\n    // const [state, setState] = useState(wordSet);\n    // const addItem = (part1, part2) => {\n    //     setState(() => {\n    //         state.addItem(part1, part2);\n    //         return state\n    //     })\n    // }; \n\n    // const deleteItem = (id) => {\n    //     setState(() => {\n    //         state.deleteItem(id);\n    //         return state;\n    //     });\n    // }; \n    // data initialization\n\n    // console.log(wordSet);\n    \n    return (\n        <div>\n            {/* <h1>CreateNewSet page!</h1> */}\n            <AddSetName />\n            <AddSetDescription />\n            <h2>Add new words to your set!</h2>\n\n            <div className='add_word'>\n                <input className='add_word_1' placeholder='type a word' />\n                <input className='add_word_2' placeholder='type translation' />\n                <button className='button' >add</button>\n            </div>\n            <h2>Your set contains:</h2>\n            <WordSet words={wordSet} />\n        </div>\n    )\n}\n\nexport default CreateNewSet;\n\n"]},"metadata":{},"sourceType":"module"}