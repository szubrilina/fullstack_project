{"ast":null,"code":"var _jsxFileName = \"/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Word {\n  constructor(part1, part2) {\n    this.id = Date.now();\n    this.part1 = part1;\n    this.part2 = part2;\n    this.isLearnt = false;\n    this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n  }\n\n}\n\nclass WordSet {\n  constructor(wordArray) {\n    this.words = wordArray;\n  }\n\n  deleteWord(id) {\n    this.words.filter(elem => elem.id !== id);\n  }\n\n  addWord(word) {\n    this.words.push(word);\n  }\n\n}\n\nfunction CreateNewSet() {\n  let wordSet = new WordSet([new Word('cat', 'koshka'), new Word('dog', 'sobaka')]); // const [state, setState] = useState(wordSet);\n  // const addItem = (part1, part2) => {\n  //     setState(() => {\n  //         state.addItem(part1, part2);\n  //     return state\n  //     })\n  // }; \n  // const deleteItem = (id) => {\n  //     setState(() => {\n  //         state.deleteItem(id);\n  //         return state;\n  //         }\n  //     );\n  // }; \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CreateNewSet page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CreateNewSet;\nexport default CreateNewSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewSet\");","map":{"version":3,"sources":["/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet.js"],"names":["React","Word","constructor","part1","part2","id","Date","now","isLearnt","lastSeen","WordSet","wordArray","words","deleteWord","filter","elem","addWord","word","push","CreateNewSet","wordSet"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AACtB,SAAKC,EAAL,GAAUC,IAAI,CAACC,GAAL,EAAV;AACA,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKI,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,YAAhB,CALsB,CAKQ;AACjC;;AAPM;;AASX,MAAMC,OAAN,CAAc;AACVR,EAAAA,WAAW,CAACS,SAAD,EAAY;AACnB,SAAKC,KAAL,GAAaD,SAAb;AACH;;AAEDE,EAAAA,UAAU,CAACR,EAAD,EAAK;AACX,SAAKO,KAAL,CAAWE,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYA,EAAtC;AACH;;AAEDW,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,SAAKL,KAAL,CAAWM,IAAX,CAAgBD,IAAhB;AACH;;AAXS;;AAcd,SAASE,YAAT,GAAwB;AACpB,MAAIC,OAAO,GAAG,IAAIV,OAAJ,CAAY,CACtB,IAAIT,IAAJ,CAAS,KAAT,EAAgB,QAAhB,CADsB,EAEtB,IAAIA,IAAJ,CAAS,KAAT,EAAgB,QAAhB,CAFsB,CAAZ,CAAd,CADoB,CAMpB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KA/BQkB,Y;AAiCT,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\n\nclass Word {\n    constructor(part1, part2) {\n        this.id = Date.now();\n        this.part1 = part1;\n        this.part2 = part2;\n        this.isLearnt = false;\n        this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n    }\n}\nclass WordSet {\n    constructor(wordArray) {\n        this.words = wordArray;\n    }\n\n    deleteWord(id) {\n        this.words.filter(elem => elem.id !== id)\n    }\n\n    addWord(word) {\n        this.words.push(word);\n    }\n}\n\nfunction CreateNewSet() {\n    let wordSet = new WordSet([\n        new Word('cat', 'koshka'), \n        new Word('dog', 'sobaka'), \n    ]);\n    \n    // const [state, setState] = useState(wordSet);\n    // const addItem = (part1, part2) => {\n    //     setState(() => {\n    //         state.addItem(part1, part2);\n    //     return state\n    //     })\n    // }; \n    \n    // const deleteItem = (id) => {\n    //     setState(() => {\n    //         state.deleteItem(id);\n    //         return state;\n    //         }\n    //     );\n    // }; \n\n    return (\n        <div>\n            <h1>CreateNewSet page!</h1>\n            {/* <h2>state.words[0].part1</h2> */}\n            {/* <div className='todo_list'>\n            {state.words.map(elem => <ToDoItem key = {elem.id} item={elem}/>)}\n            </div> */}\n        </div>\n    )\n}\n\nexport default CreateNewSet;"]},"metadata":{},"sourceType":"module"}