{"ast":null,"code":"var _jsxFileName = \"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport '../../style/Profile.css';\nimport axios from 'axios';\nimport SetRepresenting from './SetRepresenting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile() {\n  _s();\n\n  const baseURL = \"http://127.0.0.1:8000/api/\";\n\n  let calculate = sets => {\n    if (sets.length <= 1) {\n      return sets;\n    } else return [sets[0], sets[1]];\n  };\n\n  const [sets, GetSets] = useState([]);\n  useEffect(() => {\n    axios({\n      method: \"GET\",\n      url: baseURL + 'sets/list/'\n    }).then(response => {\n      const data = response.data;\n      GetSets(data);\n    });\n  }, {});\n  /*let wordSet1 = {\n      id: 0,\n      words: [\n          {\n              id: 0,\n              part1: 'cat',\n              part2: 'кошка',\n              isLearnt: false,\n              lastSeen: '03.01.2022' // dd.mm.yyyy\n          },\n          {\n              id: 2,\n              part1: 'dog',\n              part2: ' собака',\n              isLearnt: true,\n              lastSeen: '01.01.2022' // dd.mm.yyyy\n          }\n      ],\n      name: 'Domestic Animals', \n      description: 'Names of some most popular animals.'\n  };\n  let wordSet2 = {\n      id: 1,\n      words: [\n          {\n              id: 1,\n              part1: 'Take into consideration',\n              part2: 'принимать к сведению',\n              isLearnt: false,\n              lastSeen: '03.01.2022' // dd.mm.yyyy\n          },\n          {\n              id: 2,\n              part1: 'Once in a blue moon',\n              part2: 'Очень редко, почти никогда',\n              isLearnt: true,\n              lastSeen: '01.01.2022' // dd.mm.yyyy\n          },\n          {\n              id: 3,\n              part1: 'Have butterflies in your stomach',\n              part2: 'Быть очень взволнованным, нервным',\n              isLearnt: false,\n              lastSeen: '01.01.2022' // dd.mm.yyyy\n          },\n          {\n              id: 4,\n              part1: 'See eye to eye',\n              part2: 'Иметь такую же точку зрения',\n              isLearnt: false,\n              lastSeen: '01.01.2022' // dd.mm.yyyy\n          }\n      ],\n      name: 'English Ideoms', \n      description: 'Some most popular English ideoms.'\n  };\n  let wordSet3 = {\n      id: 2,\n      words: [\n          {\n              id: 1,\n              part1: 'mother',\n              part2: 'мама',\n              isLearnt: false,\n              lastSeen: '03.01.2022' // dd.mm.yyyy\n          },\n          {\n              id: 2,\n              part1: 'father',\n              part2: 'папа',\n              isLearnt: true,\n              lastSeen: '01.01.2022' // dd.mm.yyyy\n          }\n      ],\n      name: 'Family members', \n      description: 'Names of family members.'\n  };*/\n\n  let user = {\n    name: 'Sofia',\n    surname: 'Zubrilina',\n    email: 'myemail@gmail.com',\n    password: '******'\n  }; // let sets = [wordSet1, wordSet2, wordSet3];\n\n  let setsForToday = calculate(sets);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: '20px'\n      },\n      children: [\"Hi \", user.name, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your study sets:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-sets\",\n      children: sets.map(set => /*#__PURE__*/_jsxDEV(SetRepresenting, {\n        set: set\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sets to learn today:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-sets\",\n      children: setsForToday.map(set => /*#__PURE__*/_jsxDEV(SetRepresenting, {\n        set: set\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 42\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"notice\",\n      children: \"click on the set to start learning!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"ydMFatkp9d01LaE3wsZgQxKe8kk=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/mikovalnya/sonya/fullstack_project/my-app/src/components/Profile/Profile.js"],"names":["React","useState","useEffect","axios","SetRepresenting","Profile","baseURL","calculate","sets","length","GetSets","method","url","then","response","data","user","name","surname","email","password","setsForToday","margin","map","set"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,yBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAMC,OAAO,GAAG,4BAAhB;;AACA,MAAIC,SAAS,GAAIC,IAAD,IAAU;AACtB,QAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAAC,aAAOD,IAAP;AAAa,KAApC,MACK,OAAO,CAACA,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAP;AACR,GAHD;;AAIA,QAAM,CAACA,IAAD,EAAOE,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAE,MAAM;AACbC,IAAAA,KAAK,CAAE;AACHQ,MAAAA,MAAM,EAAE,KADL;AAEHC,MAAAA,GAAG,EAAEN,OAAO,GAAG;AAFZ,KAAF,CAAL,CAGGO,IAHH,CAGQC,QAAQ,IAAO;AACnB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAL,MAAAA,OAAO,CAACK,IAAD,CAAP;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;AASA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,MAAIC,IAAI,GAAG;AACPC,IAAAA,IAAI,EAAE,OADC;AAEPC,IAAAA,OAAO,EAAE,WAFF;AAGPC,IAAAA,KAAK,EAAE,mBAHA;AAIPC,IAAAA,QAAQ,EAAE;AAJH,GAAX,CA/Fe,CAsGf;;AACA,MAAIC,YAAY,GAAGd,SAAS,CAACC,IAAD,CAA5B;AAEA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACc,QAAAA,MAAM,EAAE;AAAT,OAAX;AAAA,wBAAiCN,IAAI,CAACC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKT,IAAI,CAACe,GAAL,CAASC,GAAG,iBAAI,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAIA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAhB;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKH,YAAY,CAACE,GAAb,CAAiBC,GAAG,iBAAI,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAIA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAxB;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAvHQnB,O;;KAAAA,O;AAyHT,eAAeA,OAAf","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport '../../style/Profile.css';\nimport axios from 'axios';\nimport SetRepresenting from './SetRepresenting'\n\nfunction Profile() {\n\n    const baseURL = \"http://127.0.0.1:8000/api/\";\n    let calculate = (sets) => {\n        if (sets.length <= 1) {return sets;}\n        else return [sets[0], sets[1]];\n    }\n    const [sets, GetSets] = useState([]);\n    useEffect( () => {\n        axios( {\n            method: \"GET\",\n            url: baseURL + 'sets/list/',\n        }).then(response    => {\n            const data = response.data;\n            GetSets(data);\n        })\n    }, {})\n    /*let wordSet1 = {\n        id: 0,\n        words: [\n            {\n                id: 0,\n                part1: 'cat',\n                part2: 'кошка',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'dog',\n                part2: ' собака',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'Domestic Animals', \n        description: 'Names of some most popular animals.'\n    };\n    let wordSet2 = {\n        id: 1,\n        words: [\n            {\n                id: 1,\n                part1: 'Take into consideration',\n                part2: 'принимать к сведению',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'Once in a blue moon',\n                part2: 'Очень редко, почти никогда',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 3,\n                part1: 'Have butterflies in your stomach',\n                part2: 'Быть очень взволнованным, нервным',\n                isLearnt: false,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 4,\n                part1: 'See eye to eye',\n                part2: 'Иметь такую же точку зрения',\n                isLearnt: false,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'English Ideoms', \n        description: 'Some most popular English ideoms.'\n    };\n    let wordSet3 = {\n        id: 2,\n        words: [\n            {\n                id: 1,\n                part1: 'mother',\n                part2: 'мама',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'father',\n                part2: 'папа',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'Family members', \n        description: 'Names of family members.'\n    };*/\n\n    let user = {\n        name: 'Sofia',\n        surname: 'Zubrilina',\n        email: 'myemail@gmail.com',\n        password: '******'\n    }\n\n    // let sets = [wordSet1, wordSet2, wordSet3];\n    let setsForToday = calculate(sets);\n\n    return (\n        <div>\n            <h1 style={{margin: '20px'}}>Hi {user.name}!</h1>\n            <h2>Your study sets:</h2>\n            <div className='all-sets'>\n                {sets.map(set => <SetRepresenting set = {set} />)}\n            </div>\n            <h2>Sets to learn today:</h2>\n            <div className='all-sets'>\n                {setsForToday.map(set => <SetRepresenting set = {set} />)}\n            </div>\n            <p className='notice'>click on the set to start learning!</p>\n        </div>\n    )\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}