{"ast":null,"code":"var _jsxFileName = \"/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/FlashCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../../style/LearnSet.css';\nimport { Context } from '../../context';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FlashCard(_ref) {\n  _s();\n\n  let {\n    set,\n    setId,\n    state,\n    setState\n  } = _ref;\n  const {\n    navigate\n  } = useNavigate();\n  const [redirect, Redirect] = useState(false);\n\n  const onClickButton_FlipCard = () => {\n    setState({\n      text1: state.text2,\n      text2: state.text1,\n      wordId: state.wordId,\n      wordSet: state.wordSet\n    });\n  };\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const goToPage = () => navigate('/set-info');\n\n    if (didCancel) {//goToPage();\n    }\n\n    return () => {};\n  }, []);\n\n  const onClickButton_NextCard = () => {\n    console.log(set.words.length, '     ', state.wordId + 1);\n    const id = state.wordId + 1 == set.words.length ? -1 : state.wordId + 1;\n    console.log(id);\n\n    if (id == -1) {\n      Redirect(true);\n    }\n\n    setState(() => {\n      console.log(id);\n      console.log(state.wordSet.words[id].text1);\n      return {\n        text1: state.wordSet.words[id].part1,\n        text2: state.wordSet.words[id].part2,\n        wordId: id,\n        wordSet: set\n      };\n    });\n    console.log(state.text1, state.text2, state.log);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: set.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: state.text1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button study_again\",\n        onClick: onClickButton_NextCard,\n        children: \"Study again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickButton_FlipCard,\n        className: \"button\",\n        children: \"Flip the card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button got_it\",\n        onClick: onClickButton_NextCard,\n        children: \"Got it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FlashCard, \"219ntub6M2zMLrXLsK1rCSGeVSQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FlashCard;\nexport default FlashCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlashCard\");","map":{"version":3,"sources":["/home/mikovalnya/sonya/fullstack_project/my-app/src/components/LearnSet/FlashCard.js"],"names":["React","useEffect","useState","Context","useNavigate","FlashCard","set","setId","state","setState","navigate","redirect","Redirect","onClickButton_FlipCard","text1","text2","wordId","wordSet","didCancel","goToPage","onClickButton_NextCard","console","log","words","length","id","part1","part2","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport '../../style/LearnSet.css';\nimport {Context} from '../../context'\nimport { useNavigate } from 'react-router-dom';\n\nfunction FlashCard({set, setId, state, setState}) {\n    const {navigate} = useNavigate();\n    const [redirect, Redirect] = useState(false);\n    const onClickButton_FlipCard = () => {\n        setState({\n            text1: state.text2,\n            text2: state.text1,\n            wordId: state.wordId,\n            wordSet: state.wordSet\n        });\n    }\n    useEffect(() => {\n        let didCancel = false;\n        const goToPage = () => navigate('/set-info');\n        if (didCancel) {\n          //goToPage();\n        }\n        return () => {}\n    }, []);\n    const onClickButton_NextCard = () => {\n        console.log((set.words.length), '     ', state.wordId + 1)\n        \n        const id = ((state.wordId + 1 == (set.words.length)) ? -1 : state.wordId + 1);\n        console.log(id);\n        if (id == -1) {\n            Redirect(true);\n        } \n        setState(() => {\n            console.log(id);\n            console.log(state.wordSet.words[id].text1);\n            return  {\n                text1: state.wordSet.words[id].part1,\n                text2: state.wordSet.words[id].part2,\n                wordId: id,\n                wordSet: set\n            }\n        });\n        console.log(state.text1, state.text2, state.log)\n    }\n    return (\n        <div>\n            <h2>{set.name}</h2>\n            <div className='card-wrapper'>\n                <div className='card'>\n                    <h2>{state.text1}</h2>\n                </div>\n            </div>\n                \n                <div className='button-wrapper'>\n                    <button className='button study_again' onClick={onClickButton_NextCard}>Study again</button>\n                    <button onClick={onClickButton_FlipCard} className='button' >Flip the card</button>\n                    <button className='button got_it' onClick={onClickButton_NextCard} >Got it</button>\n                </div>\n            </div>\n        \n    )\n}\n\nexport default FlashCard;\n\n"]},"metadata":{},"sourceType":"module"}