{"ast":null,"code":"var _jsxFileName = \"/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/SetInfo/SetStatistic.js\";\nimport React, { useState } from 'react';\nimport '../../style/SetInfo.css';\nimport Diagram from './Diagram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SetStatistic() {\n  let wordSet = {\n    words: [{\n      id: 1,\n      part1: 'cat',\n      part2: 'koshka',\n      isLearnt: false,\n      lastSeen: '03.01.2022' // dd.mm.yyyy\n\n    }, {\n      id: 2,\n      part1: 'bog',\n      part2: 'cobaka',\n      isLearnt: true,\n      lastSeen: '01.01.2022' // dd.mm.yyyy\n\n    }],\n    name: 'Domestic Animals',\n    description: 'Names of some most popular animals.'\n  };\n  let notLearnt = 0;\n  let learnt = 0;\n\n  for (var i = 0; i < wordSet.words.length; ++i) {\n    let elem = wordSet[i];\n\n    if (elem.isLearnt === false) {\n      notLearnt = notLearnt + 1;\n    } else {\n      learnt = learnt + 1;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: \"0 0 180 180\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"80\",\n        cy: \"80\",\n        r: \"80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 8\n  }, this);\n}\n\n_c = SetStatistic;\nexport default SetStatistic;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetStatistic\");","map":{"version":3,"sources":["/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/SetInfo/SetStatistic.js"],"names":["React","useState","Diagram","SetStatistic","wordSet","words","id","part1","part2","isLearnt","lastSeen","name","description","notLearnt","learnt","i","length","elem"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,yBAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,YAAT,GAAwB;AAEpB,MAAIC,OAAO,GAAG;AACVC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,KAAK,EAAE,KAFX;AAGIC,MAAAA,KAAK,EAAE,QAHX;AAIIC,MAAAA,QAAQ,EAAE,KAJd;AAKIC,MAAAA,QAAQ,EAAE,YALd,CAK2B;;AAL3B,KADG,EAQH;AACIJ,MAAAA,EAAE,EAAE,CADR;AAEIC,MAAAA,KAAK,EAAE,KAFX;AAGIC,MAAAA,KAAK,EAAE,QAHX;AAIIC,MAAAA,QAAQ,EAAE,IAJd;AAKIC,MAAAA,QAAQ,EAAE,YALd,CAK2B;;AAL3B,KARG,CADG;AAiBVC,IAAAA,IAAI,EAAE,kBAjBI;AAkBVC,IAAAA,WAAW,EAAE;AAlBH,GAAd;AAqBA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGX,OAAO,CAACC,KAAR,CAAcW,MAAjC,EAAyC,EAAED,CAA3C,EAA8C;AAC1C,QAAIE,IAAI,GAAGb,OAAO,CAACW,CAAD,CAAlB;;AACA,QAAIE,IAAI,CAACR,QAAL,KAAkB,KAAtB,EAA6B;AAACI,MAAAA,SAAS,GAAGA,SAAS,GAAG,CAAxB;AAA2B,KAAzD,MACK;AAACC,MAAAA,MAAM,GAAGA,MAAM,GAAG,CAAlB;AAAqB;AAC9B;;AAED,sBACG;AAAA,2BACI;AAAK,MAAA,OAAO,EAAC,aAAb;AAA2B,MAAA,KAAK,EAAC,4BAAjC;AAAA,6BACC;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,CAAC,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AASH;;KAxCQX,Y;AA0CT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport '../../style/SetInfo.css';\nimport Diagram from './Diagram';\n\nfunction SetStatistic() {\n\n    let wordSet = {\n        words: [\n            {\n                id: 1,\n                part1: 'cat',\n                part2: 'koshka',\n                isLearnt: false,\n                lastSeen: '03.01.2022' // dd.mm.yyyy\n            },\n            {\n                id: 2,\n                part1: 'bog',\n                part2: 'cobaka',\n                isLearnt: true,\n                lastSeen: '01.01.2022' // dd.mm.yyyy\n            }\n        ],\n        name: 'Domestic Animals', \n        description: 'Names of some most popular animals.'\n    };\n    \n    let notLearnt = 0;\n    let learnt = 0;\n    for (var i =0; i < wordSet.words.length; ++i) {\n        let elem = wordSet[i];\n        if (elem.isLearnt === false) {notLearnt = notLearnt + 1;}\n        else {learnt = learnt + 1;}\n    }\n\n    return (\n       <div>\n           <svg viewBox=\"0 0 180 180\" xmlns=\"http://www.w3.org/2000/svg\">\n            <circle cx=\"80\" cy=\"80\" r=\"80\"/>\n            </svg>\n\n            {/* <Diagram /> */}\n       </div>\n    )\n}\n\nexport default SetStatistic;\n\n"]},"metadata":{},"sourceType":"module"}