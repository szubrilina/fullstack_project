{"ast":null,"code":"var _jsxFileName = \"/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet/CreateNewSet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Word {\n  constructor(part1, part2) {\n    this.id = Date.now();\n    this.part1 = part1;\n    this.part2 = part2;\n    this.isLearnt = false;\n    this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n  }\n\n}\n\nclass WordSet {\n  constructor(wordArray) {\n    this.words = wordArray;\n  }\n\n  deleteWord(id) {\n    this.words.filter(elem => elem.id !== id);\n  }\n\n  addWord(word) {\n    this.words.push(word);\n  }\n\n}\n\nfunction CreateNewSet() {\n  _s();\n\n  // data initialization\n  let wordSet = new WordSet([new Word('cat', 'koshka'), new Word('dog', 'cobaka')]);\n  const [state, setState] = useState(wordSet);\n\n  const addItem = (part1, part2) => {\n    setState(() => {\n      state.addItem(part1, part2);\n      return state;\n    });\n  };\n\n  const deleteItem = id => {\n    setState(() => {\n      state.deleteItem(id);\n      return state;\n    });\n  }; // data initialization\n\n\n  const onClick = event => {\n    // let val = event.previousElementSibling.value;\n    let val = wordPart1.value;\n\n    if (val == '') {\n      console.log('no input');\n    } else {\n      console.log(val);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddSetName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddSetDescription, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new words to your set!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add_word\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: \"wordPart1\",\n        className: \"add_word_1\",\n        placeholder: \"type a word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add_word_2\",\n        placeholder: \"type translation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: onClick,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateNewSet, \"4/tM4yWYCNCO34Cy5GEsUWjDqbc=\");\n\n_c = CreateNewSet;\nexport default CreateNewSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNewSet\");","map":{"version":3,"sources":["/home/sofia/Documents/MIPT/fullstack/My_project/my-app/src/components/CreateNewSet/CreateNewSet.js"],"names":["React","useState","AddSetDescription","AddSetName","Word","constructor","part1","part2","id","Date","now","isLearnt","lastSeen","WordSet","wordArray","words","deleteWord","filter","elem","addWord","word","push","CreateNewSet","wordSet","state","setState","addItem","deleteItem","onClick","event","val","wordPart1","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,8BAAP;;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,CAACC,KAAD,EAAQC,KAAR,EAAe;AACtB,SAAKC,EAAL,GAAUC,IAAI,CAACC,GAAL,EAAV;AACA,SAAKJ,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKI,QAAL,GAAgB,KAAhB;AACA,SAAKC,QAAL,GAAgB,YAAhB,CALsB,CAKQ;AACjC;;AAPM;;AASX,MAAMC,OAAN,CAAc;AACVR,EAAAA,WAAW,CAACS,SAAD,EAAY;AACnB,SAAKC,KAAL,GAAaD,SAAb;AACH;;AAEDE,EAAAA,UAAU,CAACR,EAAD,EAAK;AACX,SAAKO,KAAL,CAAWE,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYA,EAAtC;AACH;;AAEDW,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,SAAKL,KAAL,CAAWM,IAAX,CAAgBD,IAAhB;AACH;;AAXS;;AAcd,SAASE,YAAT,GAAwB;AAAA;;AAEpB;AACA,MAAIC,OAAO,GAAG,IAAIV,OAAJ,CAAY,CACtB,IAAIT,IAAJ,CAAS,KAAT,EAAgB,QAAhB,CADsB,EAEtB,IAAIA,IAAJ,CAAS,KAAT,EAAgB,QAAhB,CAFsB,CAAZ,CAAd;AAKA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAACsB,OAAD,CAAlC;;AACA,QAAMG,OAAO,GAAG,CAACpB,KAAD,EAAQC,KAAR,KAAkB;AAC9BkB,IAAAA,QAAQ,CAAC,MAAM;AACXD,MAAAA,KAAK,CAACE,OAAN,CAAcpB,KAAd,EAAqBC,KAArB;AACA,aAAOiB,KAAP;AACH,KAHO,CAAR;AAIH,GALD;;AAOA,QAAMG,UAAU,GAAInB,EAAD,IAAQ;AACvBiB,IAAAA,QAAQ,CAAC,MAAM;AACXD,MAAAA,KAAK,CAACG,UAAN,CAAiBnB,EAAjB;AACA,aAAOgB,KAAP;AACH,KAHO,CAAR;AAIH,GALD,CAhBoB,CAsBpB;;;AAEA,QAAMI,OAAO,GAAIC,KAAK,IAAI;AACtB;AACA,QAAIC,GAAG,GAAGC,SAAS,CAACC,KAApB;;AACA,QAAGF,GAAG,IAAI,EAAV,EAAa;AACTG,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAFD,MAEK;AACFD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACF;AACF,GARH;;AASA,sBACI;AAAA,4BAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAO,QAAA,GAAG,EAAC,WAAX;AAAuB,QAAA,SAAS,EAAC,YAAjC;AAA8C,QAAA,WAAW,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEF,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAtDQN,Y;;KAAAA,Y;AAwDT,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport AddSetDescription from './AddSetDescription';\nimport AddSetName from './AddSetName';\nimport '../../style/CreateNewSet.css';\n\nclass Word {\n    constructor(part1, part2) {\n        this.id = Date.now();\n        this.part1 = part1;\n        this.part2 = part2;\n        this.isLearnt = false;\n        this.lastSeen = \"01.01.2000\"; // dd.mm.yyyy\n    }\n}\nclass WordSet {\n    constructor(wordArray) {\n        this.words = wordArray;\n    }\n\n    deleteWord(id) {\n        this.words.filter(elem => elem.id !== id)\n    }\n\n    addWord(word) {\n        this.words.push(word);\n    }\n}\n\nfunction CreateNewSet() {\n\n    // data initialization\n    let wordSet = new WordSet([\n        new Word('cat', 'koshka'), \n        new Word('dog', 'cobaka'), \n    ]);\n    \n    const [state, setState] = useState(wordSet);\n    const addItem = (part1, part2) => {\n        setState(() => {\n            state.addItem(part1, part2);\n            return state\n        })\n    }; \n    \n    const deleteItem = (id) => {\n        setState(() => {\n            state.deleteItem(id);\n            return state;\n        });\n    }; \n    // data initialization\n\n    const onClick =  event => {\n        // let val = event.previousElementSibling.value;\n        let val = wordPart1.value;\n        if(val == ''){\n            console.log('no input');\n        }else{\n           console.log(val);\n        }\n      }\n    return (\n        <div>\n            {/* <h1>CreateNewSet page!</h1> */}\n            <AddSetName />\n            <AddSetDescription />\n            <h2>Add new words to your set!</h2>\n\n            <div className='add_word'>\n                <input ref=\"wordPart1\" className='add_word_1' placeholder='type a word' />\n                <input className='add_word_2' placeholder='type translation' />\n                <button className='button' onClick={onClick}>add</button>\n            </div>\n\n            \n\n            {/* <h2>state.words[0].part1</h2> */}\n            {/* <div className='todo_list'>\n            {state.words.map(elem => <ToDoItem key = {elem.id} item={elem}/>)}\n            </div> */}\n        </div>\n    )\n}\n\nexport default CreateNewSet;"]},"metadata":{},"sourceType":"module"}